
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module MikeComp(

	//////////// CLOCK //////////
	input 		          		CLOCK_50,
//	input 		          		CLOCK2_50,
//	input 		          		CLOCK3_50,
//	input 		          		CLOCK4_50,

	//////////// SEG7 //////////
	output		     [6:0]		HEX0,
	output		     [6:0]		HEX1,
	output		     [6:0]		HEX2,
	output		     [6:0]		HEX3,
	output		     [6:0]		HEX4,
	output		     [6:0]		HEX5,

	//////////// KEY //////////
	input 		     [3:0]		KEY,

	//////////// LED //////////
	output 			  [9:0]		LEDR, 

	//////////// SW //////////
	input 		     [9:0]		SW
);
//=======================================================
//  REG/WIRE declarations
//=======================================================
	
	wire [5:0] GPO;
	wire [3:0] Debug;
	reg [27:0] General [7:0];
	wire [7:0] Dout;
	wire [7:0] IP;
	wire Turbo = SW[8];
	wire [7:0] Data_in = SW[7:0];
	wire Dval;
	wire [2:0] Btns = KEY[2:0];
	wire Sample = KEY[3];
	wire y;
	wire x = SW[9];

//=======================================================
//  Structural coding
//=======================================================

	Debounce db(CLOCK_50,x,y);
	
	CPU cpu(Btns[2:0], CLOCK_50, Data_in, y /*reset*/, Sample, Turbo, Debug[3:0], Dout[7:0], Dval, GPO[5:0], IP[7:0]);
	
	Disp2cNum dnum(Dout[7:0], Dval, HEX0[6:0], HEX1[6:0], HEX2[6:0], HEX3[6:0]);
	
	assign LEDR[5:0] = GPO;
	assign LEDR[9:6] = Debug;
	
	DispHex dh(IP[7:0], HEX4[6:0], HEX5[6:0]);
	
endmodule
